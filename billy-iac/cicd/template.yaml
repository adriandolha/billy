AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  bill

  Billy pipeline.

Resources:
  UnitTestsProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt BuildProjectRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: "billy-iac/cicd/buildspec-pytest.yml"
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
          - LOCAL_SOURCE_CACHE
          - LOCAL_CUSTOM_CACHE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: PACKAGE_BUCKET
            Value: !Ref Artifacts
          - Name: PROJECT_PATH
            Value: billy-api
          - Name: TESTS_PATH
            Value: ../tests/
          - Name: env
            Value: "dev"

  IntegrationTestsProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt BuildProjectRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: "billy-iac/cicd/buildspec-pytest.yml"
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
          - LOCAL_SOURCE_CACHE
          - LOCAL_CUSTOM_CACHE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: PACKAGE_BUCKET
            Value: !Ref Artifacts
          - Name: PROJECT_PATH
            Value: billy-api
          - Name: TESTS_PATH
            Value: ../integration_tests/
          - Name: env
            Value: "dev"

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt BuildProjectRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: "billy-iac/cicd/buildspec.yml"
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
          - LOCAL_SOURCE_CACHE
          - LOCAL_CUSTOM_CACHE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: PACKAGE_BUCKET
            Value: !Ref Artifacts
          - Name: PROJECT_PATH
            Value: billy-iac
          - Name: ENV
            Value: dev
          - Name: cloudfront_distribution_id
            Value: !Sub "{{resolve:ssm:/dev/cloudfront_distribution_id}}"

  DeployProdProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt BuildProjectRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: "billy-iac/cicd/buildspec.yml"
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
          - LOCAL_SOURCE_CACHE
          - LOCAL_CUSTOM_CACHE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: PACKAGE_BUCKET
            Value: !Ref Artifacts
          - Name: PROJECT_PATH
            Value: billy-iac
          - Name: ENV
            Value: prod
          - Name: cloudfront_distribution_id
            Value: !Sub "{{resolve:ssm:/prod/cloudfront_distribution_id}}"

  BuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub "Used in CodeBuild project. Created by CloudFormation ${AWS::StackId}"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /service-role/

  GitHubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      AuthenticationConfiguration:
        SecretToken: !Sub "{{resolve:secretsmanager:cicd/billy:SecretString:github_token}}"
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref Pipeline
      TargetAction: GitHubSource
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true


  Artifacts:
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
    Type: AWS::S3::Bucket

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: "billy-cicd"
      ArtifactStore:
        Location: !Ref Artifacts
        Type: S3
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Owner: !Sub "{{resolve:secretsmanager:cicd/billy:SecretString:github_owner}}"
                OAuthToken: !Sub "{{resolve:secretsmanager:cicd/billy:SecretString:github_token}}"
                Repo: !Sub "{{resolve:secretsmanager:cicd/billy:SecretString:github_repo}}"
                Branch: "master"
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: UnitTests
          Actions:
            - Name: UnitTests
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref UnitTestsProject
                PrimarySource: SourceArtifact
              InputArtifacts:
                - Name: SourceArtifact

        - Name: BuildDeployDev
          Actions:
            - Name: BuildDeployDev
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact

        - Name: IntegrationTests
          Actions:
            - Name: IntegrationTests
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref IntegrationTestsProject
                PrimarySource: SourceArtifact
              InputArtifacts:
                - Name: SourceArtifact

        - Name: DeployProd
          Actions:
            - Name: DeployProd
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref DeployProdProject
              InputArtifacts:
                - Name: SourceArtifact

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub "Used by CodePipeline. Created by CloudFormation ${AWS::StackId}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: s3-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${Artifacts}/*
              - Effect: Allow
                Action:
                  - "s3:ListBucket"
                  - "s3:GetBucketPolicy"
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${Artifacts}
        - PolicyName: codebuild-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - !GetAtt BuildProject.Arn
                  - !GetAtt UnitTestsProject.Arn
                  - !GetAtt IntegrationTestsProject.Arn
  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub codebuild-access-${AWS::StackName}
      Roles:
        - !Ref BuildProjectRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
          - Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::*
          - Action:
              - s3:ListBucket
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::*
          - Action:
              - serverlessrepo:GetApplication
              - serverlessrepo:CreateCloudFormationTemplate
              - serverlessrepo:GetCloudFormationTemplate
              - cloudformation:*
              - cloudfront:*
              - ssm:*
              - iam:*
              - lambda:*
              - cognito-idp:*
              - route53:*
              - dynamodb:*
              - SNS:*
              - sqs:*
              - ecr:*
              - apigateway:*
            Effect: Allow
            Resource: '*'